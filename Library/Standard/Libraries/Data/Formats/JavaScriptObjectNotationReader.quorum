package Libraries.Data.Formats

use Libraries.System.File

use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Data.Formats.JavaScriptObjectNotationDefaultListener
use Libraries.Data.Formats.JavaScriptObjectNotationLexer
use Libraries.Data.Formats.JavaScriptObjectNotationListener
use Libraries.Data.Formats.JavaScriptObjectNotationParser

/*
This class can read in JavaScriptObjectNotation (JSON) formatted data from text values or 
from disk. When it reads them in, the object is parsed and placed into a set of 
objects. Alternatively, this class allows the programmer to set a listener object 
that can receive information about how the JSON file is being parsed as it occurs. 

Attribute: Example

use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Data.Formats.JavaScriptObjectNotationReader
class Main
   action Main
      text dq = ""
        dq = dq:GetDoubleQuote()
        JavaScriptObjectNotationReader reader
        text myValue = "{" + dq + "data" + dq + ": [21.5, 22.7, 23.9]}"
        JavaScriptObjectNotation json = reader:ReadToObject(myValue)
        i = 0
        repeat while i < object:GetSize()
            JavaScriptObjectNotation next = json:Get(i)
            if next:GetKey() = "data"
                output "data"
                JavaScriptObjectNotation array = next:Get(0)
                j = 0
                repeat while j < array:GetSize()
                    JavaScriptObjectNotation item = array:Get(j)
                    output item:GetNumber()
                    j = j + 1
                end
            end
            i = i + 1
        end
   end
end
*/
class JavaScriptObjectNotationReader
    JavaScriptObjectNotationListener listener
    JavaScriptObjectNotationLexer lexer
    JavaScriptObjectNotationParser parser

    /*
        This action retrieves a listener, if one was set, that receives events 
        related to parsing the JavaScriptObjectNotation (JSON) text.
    */
    action GetListener returns JavaScriptObjectNotationListener
        return listener
    end

    /*
        This action sets a listener, if one was set, that receives events 
        related to parsing the JavaScriptObjectNotation (JSON) text.
    */
    action SetListener(JavaScriptObjectNotationListener listener)
        me:listener = listener
        lexer:SetListener(listener)
        parser:SetListener(listener)
    end

    /*
        This action reads a file from disk and asks the JavaScriptObjectNotation 
        system to read it in. Unlike ReadToObject(File file), which reads the 
        file to an object representing the original source, this action is 
        designed to allow the programmer to manually follow the parse as it 
        proceeds. As such, to obtain any information from the system, the 
        programmer needs to extend the JavaScriptObjectNotationListener class 
        and use it to capture events as they are parsed. For most users, use of 
        ReadToObject(File file) is recommended over this one.

        Attribute: Parameter file The file to be parsed.

        Attribute: Example

        use Libraries.Data.Formats.JavaScriptObjectNotation
        use Libraries.Data.Formats.JavaScriptObjectNotationReader
        use Libraries.Data.Formats.JavaScriptObjectNotationListener

        class Main is JavaScriptObjectNotationListener
            action Main
                JavaScriptObjectNotationReader reader
                reader:SetListener(me)

                File file
                file:SetPath("Test.json")   
                reader:Read(file)
            end
           
            //output any values
            action VisitString(JavaScriptObjectNotationTerminal terminal)
                output token:value
            end
        end
    */
    action Read(File file)
        lexer:Read(file)
        parser:Parse(lexer)
    end

    /*
        This action reads a file from disk and asks the JavaScriptObjectNotation 
        system to read it in. Unlike ReadToObject(File file), which reads the 
        file to an object representing the original source, this action is 
        designed to allow the programmer to manually follow the parse as it 
        proceeds. As such, to obtain any information from the system, the 
        programmer needs to extend the JavaScriptObjectNotationListener class 
        and use it to capture events as they are parsed. For most users, use of 
        ReadToObject(File file) is recommended over this one.

        Attribute: Parameter value The text value to be parsed.

        Attribute: Example

        use Libraries.Data.Formats.JavaScriptObjectNotation
        use Libraries.Data.Formats.JavaScriptObjectNotationReader
        use Libraries.Data.Formats.JavaScriptObjectNotationListener

        class Main is JavaScriptObjectNotationListener
            action Main
                JavaScriptObjectNotationReader reader
                reader:SetListener(me)

                File file
                file:SetPath("Test.json")   
                reader:Read(file:Read())
            end
           
            //output any values
            action VisitString(JavaScriptObjectNotationTerminal terminal)
                output token:value
            end
        end
    */
    action Read(text value)
        lexer:Read(value)
        parser:Parse(lexer)
    end

    /*
    This action can read in JavaScriptObjectNotation (JSON) files from text values. 
    When it reads them in, the object is parsed and placed into a set of 
    objects. 
    
    Attribute: Parameter file The file to be parsed.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.Data.Formats.JavaScriptObjectNotationReader
    class Main
       action Main
            JavaScriptObjectNotationReader reader
            
            File file
            file:SetPath("Test.json")
            JavaScriptObjectNotation json = reader:ReadToObject(file)
            i = 0
            repeat while i < json:GetSize()
                JavaScriptObjectNotation next = json:Get(i)
                if next:GetKey() = "data"
                    output "data"
                    JavaScriptObjectNotation array = next:Get(0)
                    j = 0
                    repeat while j < array:GetSize()
                        JavaScriptObjectNotation item = array:Get(j)
                        output item:GetNumber()
                        j = j + 1
                    end
                end
                i = i + 1
            end
       end
    end
    */
    action ReadToObject(File file) returns JavaScriptObjectNotation
        if file not= undefined and file:Exists() and file:IsFile()
            text value = file:Read()
            return ReadToObject(value)
        end
        return undefined
    end

    /*
    This action can read in JavaScriptObjectNotation (JSON) files from text values. 
    When it reads them in, the object is parsed and placed into a set of 
    objects. 

    Attribute: Parameter value The text value to be parsed.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.Data.Formats.JavaScriptObjectNotationReader
    class Main
       action Main
            text dq = ""
            dq = dq:GetDoubleQuote()
            JavaScriptObjectNotationReader reader
            text myValue = "{" + dq + "data" + dq + ": [21.5, 22.7, 23.9]}"
            JavaScriptObjectNotation json = reader:ReadToObject(myValue)
            i = 0
            repeat while i < json:GetSize()
                JavaScriptObjectNotation next = json:Get(i)
                if next:GetKey() = "data"
                    output "data"
                    JavaScriptObjectNotation array = next:Get(0)
                    j = 0
                    repeat while j < array:GetSize()
                        JavaScriptObjectNotation item = array:Get(j)
                        output item:GetNumber()
                        j = j + 1
                    end
                end
                i = i + 1
            end
       end
    end
    */
    action ReadToObject(text value) returns JavaScriptObjectNotation
        if value = undefined
            return undefined
        end
        JavaScriptObjectNotationDefaultListener listen
        JavaScriptObjectNotationLexer lex
        JavaScriptObjectNotationParser parse

        lex:SetListener(listen)
        parse:SetListener(listen)
        lex:Read(value)
        parse:Parse(lex)
        return listen:GetObject()
    end
end
