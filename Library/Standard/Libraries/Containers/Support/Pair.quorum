package Libraries.Containers.Support

use Libraries.Language.Support.CompareResult

/*
    This class represents a set of two types. It is a convenience class for 
    applications that need a pair.
*/
class Pair <Type>
    Type first = undefined
    Type second = undefined

    /*
        This action sets the pair.

        Attribute: Parameter first The first part of the pair.
        Attribute: Parameter second The second part of the pair.
    */
    action Set(Type first, Type second)
        me:first = first
        me:second = second
    end
    
    /*  This action gets the first value in the pair
        Attribute: Returns The first value in the pair.
    */
    action GetFirstValue returns Type
        return first
    end

    /*  This action gets the second value in the pair
        Attribute: Returns The first value in the pair.
    */
    action GetSecondValue returns Type
        return second
    end

    /*  This action gets the larger value in the pair
        Attribute: Returns The larger value in the pair.
    */
    action GetGreatestValue returns Type
        CompareResult result = first:Compare(second)
        if result:result = result:LARGER
            return first
        else
            return second
        end
    end

    /*  This action gets the smaller value in the pair
        Attribute: Returns The smaller value in the pair.
    */
    action GetLeastValue returns Type
        CompareResult result = first:Compare(second)
        if result:result = result:SMALLER
            return first
        else
            return second
        end
    end

    /* 
        This action asks if the two items have an equal value. 

        Attribute: Returns True if the items are equal.
    */
    action AreValuesEqual returns boolean
        return first:Equals(second)
    end
end