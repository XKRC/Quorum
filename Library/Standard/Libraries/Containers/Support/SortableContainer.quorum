package Libraries.Containers.Support

use Libraries.Language.Object
use Libraries.Language.Support.CompareResult

/*
The SortableContainer class represents a container with a specified value used
for comparisons and sorting.

Attribute: Example

    use Libraries.Game.SortableContainer
    use Libraries.Containers.Array

    Array<SortableContainer<integer, text>> array
    SortableContainer<integer, text> container1
    SortableContainer<integer, text> container2
    container1:Set(2, "The second value")
    container2:Set(1, "The first value")
    array:Add(container1)
    array:Add(container2)
    array:Sort()
*/
class SortableContainer <Type1, Type2>
    Type1 sorter = undefined
    Type2 value = undefined
 
    /*
    This action sets the sorting value and the contained value, respectively, of
    the SortableContainer.

    Attribute: Example

        use Libraries.Game.SortableContainer

        SortableContainer<integer, text> container
        container:Set(1, "Some text to be stored")
    */
    action Set(Type1 s, Type2 v)
        sorter = s
        value = v
    end

    /*
    This action sets the sorting value of the SortableContainer.

    Attribute: Example

        use Libraries.Game.SortableContainer

        SortableContainer<integer, text> container
        container:SetSorter(1)
    */
    action SetSorter(Type1 s)
        sorter = s
    end

    /*
    This action returns the sorting value of the SortableContainer.

    Attribute: Example

        use Libraries.Game.SortableContainer

        SortableContainer<integer, text> container
        container:Set(1)
        integer sort = container:GetSorter()
    */
    action GetSorter returns Type1
        return sorter
    end

    /*
    This action sets the contained value of the SortableContainer.

    Attribute: Example

        use Libraries.Game.SortableContainer

        SortableContainer<integer, text> container
        container:SetValue("Some text to be stored")
    */
    action SetValue(Type2 v)
        value = v
    end

    /*
    This action returns the contained value of the SortableContainer.

    Attribute: Example

        use Libraries.Game.SortableContainer

        SortableContainer<integer, text> container
        container:SetValue("Some text to be stored")
        text result = container:GetValue()
    */
    action GetValue returns Type2
        return value
    end

    /*
    The Compare action will return a CompareResult. If the given parameter is a
    SortableContainer, the result will indicate whether the sorter value of the
    container was smaller, equal, or larger than the sorter value of this
    SortableContainer. If the object isn't a SortableContainer, the
    CompareResult will instead be the comparison of the hash values of the
    two objects.

    Attribute: Example

        use Libraries.Game.SortableContainer
        use Libraries.Language.Support.CompareResult

        SortableContainer<integer, text> container1
        SortableContainer<integer, text> container2
        container1:Set(2, "The second value")
        container2:Set(1, "The first value")
        CompareResult result = container1:Compare(container2)
    */
    action Compare(Object object) returns CompareResult
        if not (object is SortableContainer)
            return parent:Object:Compare(object)
        end

        SortableContainer temp = cast(SortableContainer, object)
        return sorter:Compare(temp:GetSorter())
    end
end