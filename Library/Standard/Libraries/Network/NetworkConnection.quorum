package Libraries.Network

use Libraries.Containers.List
use Libraries.Containers.HashTable
use Libraries.Containers.Iterator
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Network.NetworkRequest
use Libraries.Network.NetworkRequestListener
use Libraries.Network.NetworkResponseEvent
/*
This class is used to manage a connection to a server using the internet protocol. More information on the internet protocol, called Hyper Text Transfer Protocol (HTTP) can be found at: https://www.w3.org/Protocols/.

Attribute: Example

use Libraries.Network.NetworkConnection
use Libraries.Network.NetworkRequest
use Libraries.Network.NetworkResponseEvent
use Libraries.Network.NetworkRequestListener

class Main is NetworkRequestListener
    action Main
        NetworkRequest request
        request:SetRequestTypeToGet()
        request:SetWebAddress("https://quorumlanguage.com/GETtest.php")
        NetworkConnection http
        http:AddListener(me)
        http:SendRequest(request)
    end

    action ResponseReceived(NetworkResponseEvent response)
        output response:GetResponseText()
    end
end
*/
class NetworkConnection
    private List<NetworkRequestListener> listeners
    private NetworkRequest request = undefined
    private NetworkResponseEvent response = undefined
    private boolean sni = true

    private system action Request()

    /*
    This action sends a Network request over the connection in the object.

    Attribute: Parameter request The NetworkRequest object to be sent

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequest
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Network.NetworkRequestListener

    class Main is NetworkRequestListener
        action Main
            NetworkRequest request
            request:SetRequestTypeToGet()
            request:SetWebAddress("https://quorumlanguage.com/GETtest.php")
            NetworkConnection http
            http:AddListener(me)
            http:SendRequest(request)
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */
    action SendRequest(NetworkRequest request)
        me:request = request
        Request()
    end

    /*
    This action sends a network request over the connection in the object.

    Attribute: Returns The NetworkRequest.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequest
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Network.NetworkRequestListener

    class Main is NetworkRequestListener
        action Main
            NetworkRequest request
            request:SetRequestTypeToGet()
            request:SetWebAddress("https://quorumlanguage.com/GETtest.php")
            NetworkConnection http
            http:AddListener(me)
            http:SendRequest(request)
            NetworkRequest copy
            copy = http:GetNetworkRequest()
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */
    action GetNetworkRequest() returns NetworkRequest
        return request
    end

    /*
    This action enables or disables the ServerNameIdentification (SNI) extension in Java for Quorum using the desktop. SNI is a security feature that checks if the name of the web server you are accessing matches the name on its authentication certificate. Normally you should keep this setting on the default (which is true), but many third party web servers are misconfigured and require a work around. If you receive an error when trying to connect such as "SSLProtocolException: handshake alert: unrecognized_name" you can set this to false and it will bypass the warning and connect anyway. Note that this only affects the java plugin on the desktop and does not affect the connection through the JavaScript plugin used by the online interactive development environment.

    Attribute: Parameter value A boolean setting to enable or disable the SNI extension in Java.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequest
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Network.NetworkRequestListener

    class Main is NetworkRequestListener
        action Main
            NetworkRequest request
            request:SetRequestTypeToGet()
            request:SetWebAddress("https://quorumlanguage.com/GETtest.php")
            NetworkConnection http
            http:SetServerNameIdentification(false)
            http:AddListener(me)
            http:SendRequest(request)
            NetworkRequest copy
            copy = http:GetNetworkRequest()
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */
    action SetServerNameIdentification(boolean value)
        me:sni = value
    end

    /*
    This action retrieves the value of the ServerNameIdentification (SNI) check for Quorum using the desktop. The default value is true. See the SetServerNameIdentification action for a further description.

    Attribute: Returns value The value of the SNI setting for the connection.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequest
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Network.NetworkRequestListener

    class Main is NetworkRequestListener
        action Main
            NetworkRequest request
            request:SetRequestTypeToGet()
            request:SetWebAddress("https://quorumlanguage.com/GETtest.php")
            NetworkConnection http
            output http:GetServerNameIdentification()
            http:AddListener(me)
            http:SendRequest(request)
            NetworkRequest copy
            copy = http:GetNetworkRequest()
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */

    action GetServerNameIdentification() returns boolean
        return sni
    end

    /*
    This action adds a NetworkRequestListener to the connection which will be notified when the response returns.

    Attribute: Parameter listener The NetworkRequestListener to be added.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequestListener
    use Libraries.Network.NetworkResponseEvent

    class Main is NetworkRequestListener
        action Main
            NetworkConnection http
            http:AddListener(me)
        end

        action ResponseReceived(NetworkResponseEvent response)
            // do something with the response
        end
    end
    */
    action AddListener(NetworkRequestListener listener)
        listeners:Add(listener)
    end

    /*
    This action adds a NetworkRequestListener to the connection which will be notified when the response returns.

    Attribute: Parameter listener The NetworkRequestListener to be removed.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequestListener
    use Libraries.Network.NetworkResponseEvent

    class Main is NetworkRequestListener
        action Main
            NetworkConnection http
            http:AddListener(me)
            http:RemoveListener(me)
        end

        action ResponseReceived(NetworkResponseEvent response)
            // do something with the response
        end
    end
    */
    action RemoveListener(NetworkRequestListener listener)
        listeners:Remove(listener)
    end

    /*
    This action returns a list of NetworkRequestListeners attached to the connection.

    Attribute: Returns An iterator to the list of NetworkRequestListeners.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequestListener
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Containers.Iterator

    class Main is NetworkRequestListener
        action Main
            NetworkConnection http
            http:AddListener(me)
            Iterator<NetworkRequestListener> list = http:GetListenerIterator()
        end

        action ResponseReceived(NetworkResponseEvent response)
            // do something with the response
        end
    end
    */
    action GetListenerIterator() returns Iterator<NetworkRequestListener>
        return listeners:GetIterator()
    end
    
    /*
    This action returns a new NetworkResponseEvent.

    Attribute: Returns The NetworkResponseEvent.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkResponseEvent

    class Main
        action Main
            NetworkConnection http
            NetworkResponseEvent response = http:GetNewResponseEvent()
        end
    end
    */
    action GetNewResponseEvent() returns NetworkResponseEvent
        NetworkResponseEvent response
        return response
    end

    /*
    This action sets a response event in the connection object and notifies the listeners.

    Attribute: Parameter response The NetworkResponseEvent to forward to the listeners.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequestListener
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Containers.Iterator

    class Main is NetworkRequestListener
        action Main
            NetworkConnection http
            http:AddListener(me)
            NetworkResponseEvent response = http:GetNewResponseEvent()
            response:SetResponseText("Hello world!")
            http:SetResponse(response)
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */
    action SetResponse(NetworkResponseEvent response)
        me:response = response
        Notify(response)
    end

    /*
    This action notifies the listeners with the response event.

    Attribute: Parameter response The NetworkResponseEvent to forward to the listeners.

    Attribute: Example

    use Libraries.Network.NetworkConnection
    use Libraries.Network.NetworkRequestListener
    use Libraries.Network.NetworkResponseEvent
    use Libraries.Containers.Iterator

    class Main is NetworkRequestListener
        action Main
            NetworkConnection http
            http:AddListener(me)
            NetworkResponseEvent response = http:GetNewResponseEvent()
            response:SetResponseText("Hello world!")
            http:Notify(response)
        end

        action ResponseReceived(NetworkResponseEvent response)
            output response:GetResponseText()
        end
    end
    */
    action Notify(NetworkResponseEvent response)
        Iterator<NetworkRequestListener> iterator = listeners:GetIterator()
        repeat while iterator:HasNext()
            NetworkRequestListener listener = iterator:Next()
            listener:ResponseReceived(response)
        end
    end
end