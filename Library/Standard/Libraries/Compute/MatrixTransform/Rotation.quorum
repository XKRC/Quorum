package Libraries.Compute.MatrixTransform

use Libraries.Compute.MatrixTransform.MatrixTransform
use Libraries.Compute.Matrix
use Libraries.Containers.Array

/*
    This is a MatrixTransform class to rotate a Matrix either left or right. 

    Attribute Returns A new matrix after the operation is performed.

    Attribute: Example

    use Libraries.Compute.Matrix
    use Libraries.Compute.MatrixTransform.Rotation

    class Main 
        action Main
            Matrix matrix
            matrix:Fill(2, 3, 0.0)
            matrix:SetColumn(0, 1.1)
            matrix:SetColumn(1, 2.1)
            matrix:SetColumn(2, 3.1)
            Rotation rotation
            rotation:Right()
            Matrix result = rotation:Transform(matrix)
            output result:ToText()
        end
    end
*/
class Rotation is MatrixTransform
    private constant integer RIGHT = 1
    private constant integer LEFT = -1
    private integer direction = 0

/*
    This sets the transform operation to rotate right.

    Attribute: Example

    use Libraries.Compute.Matrix
    use Libraries.Compute.MatrixTransform.Flip

    class Main 
        action Main
            Rotation rotation
            rotation:Right()
        end
    end
*/
    action Right()
        direction = RIGHT
    end

/*
    This sets the transform operation to rotate left.

    Attribute: Example

    use Libraries.Compute.Matrix
    use Libraries.Compute.MatrixTransform.Flip

    class Main 
        action Main
            Rotation rotation
            rotation:Left()
        end
    end
*/
    action Left()
        direction = LEFT
    end

/*
    This method applies the transform to the Matrix. 

    Attribute Parameter The matrix to transform.

    Attribute Returns A new matrix after the operation is performed.

    Attribute: Example

    use Libraries.Compute.Matrix
    use Libraries.Compute.MatrixTransform.Rotation

    class Main 
        action Main
            Matrix matrix
            matrix:Fill(2, 3, 0.0)
            matrix:SetColumn(0, 1.1)
            matrix:SetColumn(1, 2.1)
            matrix:SetColumn(2, 3.1)
            Rotation rotation
            rotation:Left()
            Matrix result = rotation:Transform(matrix)
            output result:ToText()
        end
    end
*/
    action Transform(Matrix matrix) returns Matrix
        Matrix newMatrix
        newMatrix:SetSize(matrix:GetColumns(), matrix:GetRows())
        if direction = RIGHT
            col = matrix:GetRows() - 1
            row = 0
            repeat matrix:GetRows() times
                newMatrix:SetColumn(col, matrix:GetRowArray(row))
                col = col - 1
                row = row + 1
            end
        else
            col = matrix:GetColumns() - 1
            row = 0
            repeat matrix:GetColumns() times
                newMatrix:SetRow(row, matrix:GetColumnArray(col))
                col = col - 1
                row = row + 1
            end
        end
        return newMatrix
    end
end