package Libraries.Interface.Controls

use Libraries.Interface.Item2D
use Libraries.Interface.Views.ControlView
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.ControlActivationEvent
use Libraries.Interface.Events.ControlActivationListener
use Libraries.Containers.Array
use Libraries.Game.GameStateManager

class Control is Item2D

    Array<ControlActivationListener> listeners

    action ClickedMouse
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:ClickedMouse()
        end
    end

    action ReleasedMouse
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:ReleasedMouse()
        end
    end

    action BeginMouseOver
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:BeginMouseOver()
        end
    end

    action EndMouseOver
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:EndMouseOver()
        end
    end

    action GainedSelection
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:GainedSelection()
        end
    end

    action LostSelection
        if GetView2D() is ControlView
            ControlView content = cast(ControlView, GetView2D())
            content:LostSelection()
        end
    end

    /*
        This action returns a default behavior for this paricular control. Some
        controls do nothing by default, like a TextBox that responds to different kinds
        of input. Others, however, have default behaviors, like a Button or a MenuItem. 
        If there is no default behavior, this action returns undefined.
    */
    action GetActivationBehavior returns Behavior
        return undefined
    end

    action Activate
        BehaviorEvent event
        event:SetItem(me)
        Activate(event)
    end

    action Activate(BehaviorEvent event)
        if GetActivationBehavior() not= undefined
            if not event:GetItem():Equals(me)
                event = event:Copy()
                event:SetItem(me)
            end
            GetActivationBehavior():Run(event)

            ControlActivationEvent controlEvent
            controlEvent:Set(me, event)
            NotifyControlActivationListeners(controlEvent)
        end
    end

    action AddControlActivationListener(ControlActivationListener listener)
        listeners:Add(listener)
    end

    action RemoveControlActivationListener(ControlActivationListener listener)
        listeners:Remove(listener)
    end

    action NotifyControlActivationListeners(ControlActivationEvent event)
        integer counter = 0
        repeat while counter < listeners:GetSize()
            listeners:Get(counter):ControlActivated(event)
            counter = counter + 1
        end

        GameStateManager manager
        manager:GetInput():NotifyControlActivationListeners(event)
    end
end