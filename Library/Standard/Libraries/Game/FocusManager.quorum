package Libraries.Game

use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Interface.Item
use Libraries.Interface.Item2D
use Libraries.Interface.Item3D
use Libraries.Interface.AccessibilityManager
use Libraries.Interface.Events.FocusEvent
use Libraries.Interface.Events.FocusListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.SelectionEvent

class FocusManager is KeyboardListener

    Array<FocusListener> listeners
    GameStateManager manager

    Item focused = undefined

    action Add(FocusListener listener)
        listeners:Add(listener)
    end

    action Remove(FocusListener listener)
        listeners:Remove(listener)
    end

    action SetFocus(Item focusItem)
        Item item = focusItem
        if item not= undefined and item:IsFocusable() = false
            if item is Item2D
                Item2D item2D = cast(Item2D, item)
                if item2D:GetParent() not= undefined
                    SetFocus(item2D:GetParent())
                end
            elseif item is Item3D
                Item3D item3D = cast(Item3D, item)
                if item3D:GetParent() not= undefined
                    SetFocus(item3D:GetParent())
                end
            end
            return now
        end

        Item oldFocus = focused

        if oldFocus = item
            return now
        end

        FocusEvent event
        event:Initialize(oldFocus, item)
        
        focused = item
        
        AccessibilityManager accessibility = manager:GetAccessibilityManager()
        if accessibility not= undefined
            accessibility:FocusChanged(event)
        end

        if oldFocus not= undefined
            oldFocus:LostFocus(event)

            Iterator<FocusListener> iterator = oldFocus:GetFocusListeners()
            repeat while iterator:HasNext()
                FocusListener listener = iterator:Next()
                listener:LostFocus(event)
            end
        end

        if item not= undefined
            item:GainedFocus(event)

            Iterator<FocusListener> iterator = item:GetFocusListeners()
            repeat while iterator:HasNext()
                FocusListener listener = iterator:Next()
                listener:GainedFocus(event)
            end
        end

        Iterator<FocusListener> iterator = listeners:GetIterator()
        repeat while iterator:HasNext()
            FocusListener listener = iterator:Next()
            listener:GainedFocus(event)
            listener:LostFocus(event)
        end
    end

    action FocusNextItem
        if focused not= undefined and focused:GetNextFocus() not= undefined
            SetFocus(focused:GetNextFocus())
        end
    end

    action FocusPreviousItem
        if focused not= undefined and focused:GetPreviousFocus() not= undefined
            SetFocus(focused:GetPreviousFocus())
        end
    end

    action GetFocus returns Item
        return focused
    end
end