package Libraries.Game

use Libraries.Game.Graphics.Color
use Libraries.Game.ScreenResolution
use Libraries.Containers.Array

/*
This class represents the configuration of the game. It is referenced when
the game is first created to set its initial data.
 */
class DesktopConfiguration is ApplicationConfiguration
  
    /* The initial width of the application screen. */
    public integer width = 800

    /* The initial height of the application screen. */
    public integer height = 600

    /* Initial x coordinate where the window will appear on screen. -1 for center. */
    public integer x = -1

    /* Initial y coordinate where the window will appear on screen. -1 for center. */
    public integer y = -1

    /* If true, the application will use vSync. */
    public boolean vSyncEnabled = true

    /* The title of the application. */
    public text title = "Game"

    /* If true, the window will be resizable. */
    public boolean resizable = false

    /* If true, the textures will automatically be resized when the window is resized. */
    public boolean autoResizeTextures = true

    //This private variable is a way to get around Quorum's 
    //lack of contructors. We basically use a temporary Color as a
    //Constructor object, that then returns a Color singleton for 
    //ApplicationConfiguration to use.
    private Color tempColor

    /* The starting color of the window while the Game is loading. */
    public Color initialBackgroundColor = tempColor:Black()

    /* Target framerate when the window is in the foreground. Use 0 to never sleep. */
    public integer foregroundFPS = 60

    /* Target framerate when the window is not in the foreground. Use 0 to never sleep, -1 to not render. */
    public integer backgroundFPS = 60

    /*
    The ScreenResolution to use when the game launches. If left undefined, the
    game will create a window using the configuration's given width and height.
    */
    public ScreenResolution defaultResolution = undefined

    /*
    The maximum number of seconds allowed between each mouse click before the
    click is no longer considered related to the previous click. This is used
    for things such as double-click input.
    */
    public number multipleClickTimer = 0.5

    /*
    The maximum number of seconds allowed between each key press before the
    press is no longer considered related to the previous key press. This is
    used for things like capturing double-taps on keys.
    */
    public number multipleKeyPressTimer = 0.5

end