package Libraries.Game.Physics

/*
This class contains settings that will change what is the time between physics 
updates and how many interations the position and velocity constraints will
need to be solved for.
*/
class TimeStep
    number timeStep = 0  //dt
    number inverseTimeStep = 0   //1/dt
    number timeStepRatio = 1    //this this ratio is not 1, then the time step will vary
    integer velocityIterations = 6
    integer positionIterations = 2
    boolean warmStarting = true

    /*
    This action sets the time step between physics updates.
    */
    action SetTimeStep(number timeStep)
        me:timeStep = timeStep
    end

    /*
    This action gets the time step between physics updates.
    */
    action GetTimeStep returns number
        return timeStep
    end

    /*
    This action sets the 1/(time step).
    */
    action SetInverseTimeStep(number inverseTimeStep)
        me:inverseTimeStep = inverseTimeStep
    end

    /*
    This action gets the 1/(time step).
    */
    action GetInverseTimeStep returns number
        return inverseTimeStep
    end

    /*
    This action sets the time step ratio.   
    */
    action SetTimeStepRatio(number timeStepRatio)
        me:timeStepRatio = timeStepRatio
    end

    /*
    This action gets the time step ratio.   
    */
    action GetTimeStepRatio returns number
        return timeStepRatio
    end

    /*
    This action change the velocity iterations from default to a velocityIterations
    passed in.
    */
    action SetVelocityIterations(integer velocityIterations)
        me:velocityIterations = velocityIterations
    end

    /*
    This action returns the current velocity iterations setting.
    */
    action GetVelocityIterations returns integer
        return velocityIterations
    end

    /*
    This action change the position iterations from default to a positionIterations
    passed in.
    */
    action SetPositionIterations(integer positionIterations)
        me:positionIterations = positionIterations
    end

    /*
    This action returns the current position iterations setting.
    */
    action GetPositionIterations returns integer
        return positionIterations
    end

    /*
    This action sets whether warm starting is desired.
    */
    action SetWarmStarting(boolean warmStarting)
        me:warmStarting = warmStarting
    end

    /*
    This action returns whether the solver will warm start.
    */
    action IsWarmStarting returns boolean
        return warmStarting
    end
end