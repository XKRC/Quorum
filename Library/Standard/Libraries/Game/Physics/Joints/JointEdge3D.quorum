package Libraries.Game.Physics.Joints

use Libraries.Interface.Item3D

/*
    The JointEdge3D class is used to define edges between nodes in the joint 
    graph. When collisions are resolved, JointEdge3D objects are used to find 
    connected items to add to CollisionGroup3D. 

    Attribute: Example
    // Will fill in when this class is used in the incoming Item3D class
    
    
 */
class JointEdge3D 
	
    // A reference to the other item (Item3D) that this joint connects to.
    Item3D other = undefined

    // The joint that this edge represents.
    Joint3D joint = undefined

    // The previous joint edge in the joint graph.
    JointEdge3D previous = undefined

    // The next joint edge in the joint graph.
    JointEdge3D next = undefined

    /*
    This action returns the other Item3D that the joint edge connects to.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action  GetOther returns Item3D
        return other
    end

     /*
    This action returns the joint (Joint3D) that the joint edge represents.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action GetJoint returns Joint3D
        return joint
    end

     /*
    This action returns the previous joint edge (JointEdge3D) in the joint 
    graph.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action GetPrevious returns JointEdge3D
        return previous
    end

    /*
    This action returns the next joint edge (JointEdge3D) in the joint graph.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action GetNext returns JointEdge3D
        return next
    end

    /*
    This action sets other, the other Item3D that the joint connects, to be 
    the passed Joint3D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action SetOther (Item3D newOther)
        other = newOther
    end

    /*
    This action sets the next joint edge to be the passed Joint3D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action SetJoint (Joint3D newJoint)
       joint = newJoint
    end
    
    /*
    This action sets the previous joint edge in the joint graph to be the passed 
    JointEdge3D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action SetPrevious (JointEdge3D newPrevious)
        previous = newPrevious
    end

    /*
    This action sets the next joint edge in the joint graph to be the passed 
    JointEdge3D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item3D
    Item3D item1
    Item3D item2
    
    
    */
    action SetNext (JointEdge3D newNext)
        next = newNext
    end
end