package Libraries.Game.Physics.Joints

use Libraries.Interface.Item2D

/*
    The JointEdge2D class is used to define edges between nodes in the joint 
    graph. When collisions are resolved, JointEdge2D objects are used to find 
    connected items to add to CollisionGroup2D. 

    Attribute: Example
    // Will fill in when this class is used in the incoming Item2D class
    
    
 */
class JointEdge2D 
	
    // A reference to the other item (Item2D) that this joint connects to.
    Item2D other = undefined

    // The joint that this edge represents.
    Joint2D joint = undefined

    // The previous joint edge in the joint graph.
    JointEdge2D previous = undefined

    // The next joint edge in the joint graph.
    JointEdge2D next = undefined

    /*
    This action returns the other Item2D that the joint edge connects to.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action  GetOther returns Item2D
        return other
    end

     /*
    This action returns the joint (Joint2D) that the joint edge represents.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action GetJoint returns Joint2D
        return joint
    end

     /*
    This action returns the previous joint edge (JointEdge2D) in the joint 
    graph.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action GetPrevious returns JointEdge2D
        return previous
    end

    /*
    This action returns the next joint edge (JointEdge2D) in the joint graph.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action GetNext returns JointEdge2D
        return next
    end

    /*
    This action sets other, the other Item2D that the joint connects, to be 
    the passed Joint2D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action SetOther (Item2D newOther)
        other = newOther
    end

    /*
    This action sets the next joint edge to be the passed Joint2D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action SetJoint (Joint2D newJoint)
       joint = newJoint
    end
    
    /*
    This action sets the previous joint edge in the joint graph to be the passed 
    JointEdge2D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action SetPrevious (JointEdge2D newPrevious)
        previous = newPrevious
    end

    /*
    This action sets the next joint edge in the joint graph to be the passed 
    JointEdge2D.

    Attribute: Example

    // This is the backend.... Will fill in these examples later.
    package Libraries.Game.Physics.Joints
    use Libraries.Interface.Item2D
    Item2D item1
    Item2D item2
    
    
    */
    action SetNext (JointEdge2D newNext)
        next = newNext
    end
end