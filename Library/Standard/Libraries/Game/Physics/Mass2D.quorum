package Libraries.Game.Physics

use Libraries.Compute.Vector2

/*
Mass2D is a class representing a mass in 2D space.

Attribute: Example

use Libraries.Game.Physics.Mass2D
use Libraries.Compute.Vector2

Vector2 vectorSetting
vectorSetting:Set(8.0, 9.0)
Mass2D mass
mass:SetMass(5.0)
mass:SetInertia(2.0)
mass:SetCenter(vectorSetting)

number newMass = mass:GetMass()
number newInertia = mass:GetInertia()
number newX = mass:GetCenter():GetX()
number newY = mass:GetCenter():GetY()
output "The new mass has a mass of " + newMass + ", inertia of: " + newInertia + ", x center at: " + newX + ", and y center at: " + newY
*/

class Mass2D 
    number mass = 0    //the mass of the 2D object [Units: kg]
    Vector2 center     //the point that the 2D object's centroid is located at relative to the 2D object's local coordinate's origin
    number inertia = 0 //mass rotational intertia of the 2D object about the object's local coordinate's origin [Units: kgm^2]


    /*
    This action sets the properties of a 2D mass using another 2D mass.

    Attribute: Parameter mass The 2D mass whose properties will be copied.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D
    use Libraries.Compute.Vector2

    Vector2 vectorSetting
    vectorSetting:Set(8.0, 9.0)
    Mass2D mass1
    Mass2D mass2
    mass1:SetMass(5.0)
    mass1:SetInertia(2.0)
    mass1:SetCenter(vectorSetting)

    mass2:Set(mass1)
    number newMass = mass2:GetMass()
    number newInertia = mass2:GetInertia()
    number newX = mass2:GetCenter():GetX()
    number newY = mass2:GetCenter():GetY()
    output "The new mass has a mass of " + newMass + ", inertia of: " + newInertia + ", x center at: " + newX + ", and y center at: " + newY
    */
    action Set(Mass2D mass)
        me:mass = mass:mass
        me:center:Set(mass:center)
        me:inertia = mass:inertia
    end


    /*
    This action returns a copy of the current mass. The copied mass will
    have the same mass, center, and inertia as the current mass.

    Attribute: Returns a mass in 2D space.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D
    use Libraries.Compute.Vector2

    Vector2 vectorSetting
    vectorSetting:Set(8.0, 9.0)
    Mass2D massBeingCopied

    //setting the mass that we will copy
    massBeingCopied:SetMass(5.0)
    massBeingCopied:SetInertia(2.0)
    massBeingCopied:SetCenter(vectorSetting)


    //copy the mass
    Mass2D copyMass
    copyMass = massBeingCopied:Copy()
    number copiedMass = copyMass:GetMass()
    number copiedInertia = copyMass:GetInertia()
    number copiedX = copyMass:GetCenter():GetX()
    number copiedY = copyMass:GetCenter():GetY()
    output "The copy of the mass has a mass of " + copiedMass + ", inertia of: " + copiedInertia + ", x center at: " + copiedX + ", and y center at: " + copiedY
    */
    action Copy returns Mass2D
        Mass2D newMass
        newMass:Set(me)
        return newMass
    end

    /*
    This action sets the value of mass of a mass in 2D space.

    Attribute: Parameter mass The value of mass that is used to set the property of a 2D mass.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D

    Mass2D mass
    mass:SetMass(5.5)

    number massValue = mass:GetMass()
    output "The mass of this mass in 2D is: " + massValue
    */
    action SetMass(number mass)
        me:mass = mass
    end

    /*
    This action returns the mass of a mass in 2D space.

    Attribute: Returns the value of mass.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D

    Mass2D mass
    mass:SetMass(0.5)

    number massValue = mass:GetMass()
    output "The mass that you have set is: " + massValue
    */
    action GetMass returns number
        return mass
    end

    /*
    This action gets the vector that points to the center of the mass in 2D.

    Attribute: Returns a 2D vector that points to the center of the mass in 2D.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D
    use Libraries.Compute.Vector2

    Vector2 centerOfMassSetting
    centerOfMassSetting:Set(1.0, 3.0)

    Mass2D mass
    mass:SetCenter(centerOfMassSetting)

    Vector2 centerOfMass
    centerOfMass = mass:GetCenter()

    number xComponent = centerOfMass:GetX()
    number yComponent = centerOfMass:GetY()
    output "The center of mass vector is: <" + xComponent + ", " + yComponent + ">"
    */
    action GetCenter returns Vector2
        return center
    end


    /*
    This action sets the vector that points to the center of a mass in 2D space.

    Attribute: Parameter center The 2D vector that is used to set the center of mass.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D
    use Libraries.Compute.Vector2

    Vector2 centerOfMassSetting
    centerOfMassSetting:Set(1.0, 3.0)

    Mass2D mass
    mass:SetCenter(centerOfMassSetting)

    Vector2 centerOfMass
    centerOfMass = mass:GetCenter()

    number xComponent = centerOfMass:GetX()
    number yComponent = centerOfMass:GetY()
    output "The center of mass vector is: <" + xComponent + ", " + yComponent + ">"
    */
    action SetCenter(Vector2 center)
        me:center = center
    end

    /*
    This action sets the inertia of a mass in 2D space.

    Attribute: Returns the value of inertia of the current 2D mass.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D

    number inertiaSetting = 5.0
    Mass2D mass
    mass:SetInertia(inertiaSetting)

    number inertiaValue = mass:GetInertia()
    output "The inertia of mass in 2D is: " + inertiaValue
    */
    action GetInertia returns number
        return inertia
    end

    /*
    This action sets the inertia of a mass in 2D space.

    Attribute: Parameter inertia The value of inertia of a 2D mass.

    Attribute: Example

    use Libraries.Game.Physics.Mass2D

    number inertiaSetting = 5.0
    Mass2D mass
    mass:SetInertia(inertiaSetting)

    number inertiaValue = mass:GetInertia()
    output "The inertia of mass in 2D is: " + inertiaValue
    */
    action SetInertia(number inertia)
        me:inertia = inertia
    end
end