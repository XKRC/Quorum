use Libraries.Interface.Item3D
use Libraries.Compute.Math
use Libraries.Game.BoundingBox
use Libraries.Game.Collision.Item3DNode

package Libraries.Game.Collision

/*
The DynamicBoundingVolumeTreeNode3D represents a node in the DynamicBoundingVolumeTree3D
class. A DynamicBoundingVolumeTreeNode3D represents a BoundingBox3D which represents 
an item in the game. This node stores its parent in the tree as well as any children
of the node. Additionally, the node's height in the tree and ID in integer are stored.
By default, the node's treeParent, itemNode, leftChild, and rightChild are undefined. 
The node id and height are, by default, -1. 
This class is used internally by DynamicBoundingVolumeTree3D.
*/
class DynamicBoundingVolumeTreeNode3D

    BoundingBox boundingBox
    DynamicBoundingVolumeTreeNode3D treeParent = undefined

    Item3DNode itemNode = undefined

    DynamicBoundingVolumeTreeNode3D leftChild = undefined
    DynamicBoundingVolumeTreeNode3D rightChild = undefined

    integer height = -1
    integer id = -1

    /*
    This action sets the id of the Dynamic Bounding Volume Tree Node (3D).
    This action is used internally. 

    Attribute: Parameter id The integer that will be the node id. 
    */
    action SetID(integer id)
        me:id = id
    end
    
    /*
    This action gets the id of this node.
    This action is used internally.

    Attribute: Returns The id of this node.
    */
    action GetID returns integer
        return id
    end


    /*
    This action sets the Item3DNode of the Dynamic Bounding Volume Tree Node (3D), 
    which has among its data members a BoundingBox3D and an Item3D.
    This action is used internally. 

    Attribute: Parameter itemNode The item3DNode that this node will represent. 
    */
    action SetItemNode(Item3DNode itemNode)
        me:itemNode = itemNode
    end

    /*
    This action returns the Item3DNode in the Dynamic Bounding Volume Tree Node (3D), 
    which has among its data members a BoundingBox3D and an Item3D.
    This action is used internally. 

    Attribute: Returns The item3DNode in this tree node. 
    */
    action GetItemNode returns Item3DNode
        return itemNode
    end


    /*
    This action returns the integer height of this node in the 
    DynamicBoundingVolumeTree3D.
    This action is used internally. 

    Attribute: Returns The integer height of this tree node. 
    */
    action GetHeight returns integer
        return height
    end

    /*
    This action sets the height of the Dynamic Bounding Volume Tree Node (3D) in 
    the DynamicBoundingVolumeTree3D.
    This action is used internally. 

    Attribute: Parameter height The integer height at which this node should be. 
    */
    action SetHeight(integer height)
        me:height = height
    end

    /*
    This action returns the BoundingBox3D which this node represents. 
    This action is used internally. 

    Attribute: Returns The BoundingBox3D represented by this tree node. 
    */
    action GetBoundingBox returns BoundingBox
        return boundingBox
    end

    /*
    This action sets the BoundingBox3D which this node is to represent. 
    This action is used internally. 

    Attribute: Parameter boundingBox The BoundingBox3D to be represented by this tree node. 
    */
    action SetBoundingBox(BoundingBox boundingBox)
        me:boundingBox = boundingBox
    end

    /*
    This action returns the DynamicBoundingVolumeTreeNode3D which is the parent 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode3D parent of this node. 
    */
    action GetParent returns DynamicBoundingVolumeTreeNode3D
        return treeParent
    end

    /*
    This action sets the DynamicBoundingVolumeTreeNode3D which is to be the parent 
    of this node. 
    This action is used internally. 

    Attribute: Parameter treeParent The DynamicBoundingVolumeTreeNode3D which is to be the parent of this node. 
    */
    action SetParent(DynamicBoundingVolumeTreeNode3D treeParent)
        me:treeParent = treeParent
    end


    /*
    This action returns the DynamicBoundingVolumeTreeNode3D which is the left child 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode3D left child of this node. 
    */
    action GetLeftChild returns DynamicBoundingVolumeTreeNode3D
        return leftChild
    end

    /*
    This action sets the DynamicBoundingVolumeTreeNode3D which is to be the left child 
    of this node. 
    This action is used internally. 

    Attribute: Parameter leftChild The DynamicBoundingVolumeTreeNode3D which is to be the left child of this node. 
    */
    action SetLeftChild(DynamicBoundingVolumeTreeNode3D leftChild)
        me:leftChild = leftChild
    end

    /*
    This action returns the DynamicBoundingVolumeTreeNode3D which is the right child 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode3D right child of this node. 
    */
    action GetRightChild returns DynamicBoundingVolumeTreeNode3D
        return rightChild
    end

    /*
    This action sets the DynamicBoundingVolumeTreeNode3D which is to be the right child 
    of this node. 
    This action is used internally. 

    Attribute: Parameter rightChild The DynamicBoundingVolumeTreeNode3D which is to be the right child of this node. 
    */
    action SetRightChild(DynamicBoundingVolumeTreeNode3D rightChild)
        me:rightChild = rightChild
    end

    /*
    This action returns true if this node is a leaf (i.e. has no children) and false
    if this node has children. 

    Attribute Returns boolean The boolean that indicates whether or not this node is a leaf
    */
    action IsLeaf returns boolean
        return leftChild = undefined
    end
end