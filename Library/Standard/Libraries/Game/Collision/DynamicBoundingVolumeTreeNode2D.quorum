use Libraries.Interface.Item2D
use Libraries.Compute.Vector3
use Libraries.Compute.Math
use Libraries.Game.Collision.Item2DNode

package Libraries.Game.Collision

/*
The DynamicBoundingVolumeTreeNode2D represents a node in the DynamicBoundingVolumeTree2D
class. A DynamicBoundingVolumeTreeNode2D represents a BoundingBox2D which represents 
an item in the game. This node stores its parent in the tree as well as any children
of the node. Additionally, the node's height in the tree and ID in integer are stored.
By default, the node's treeParent, itemNode, leftChild, and rightChild are undefined. 
The node id and height are, by default, -1. 
This class is used internally by DynamicBoundingVolumeTree2D.

Attribute: Example

use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
use Libraries.Game.Collision.BoundingBox2D
use Libraries.Compute.Vector2
use Libraries.Game.Collision.Item2DNode

        DynamicBoundingVolumeTreeNode2D newNode
        Item2DNode node
        BoundingBox2D boundingBox
        Vector2 boxMinimum
        Vector2 boxMaximum
        boxMinimum:Set(-1, -1)
        boxMaximum:Set(1, 1)
        newNode:SetID(0) 
        BoundingBox2D nodeBoundingBox = newNode:GetBoundingBox()
        Vector2 minimum
        Vector2 maximum
        minimum:Set(boundingBox:GetMinimum())
        maximum:Set(boundingBox:GetMaximum())
        nodeBoundingBox:Set(minimum, maximum)
        newNode:SetItemNode(node)

*/
class DynamicBoundingVolumeTreeNode2D

    /*
    The bounding box of this node represents a bounding box around the bounding boxes
    of the two children (if this node is not a leaf).
    */
    BoundingBox2D boundingBox
    
    /*
    The parent node of this node in the DynamicBoundingVolumeTree2D.
    */
    DynamicBoundingVolumeTreeNode2D treeParent = undefined

    /*
    The item node represented by this tree node.
    The item node contains the 2D item that the bounding box is bounding.
    */
    Item2DNode itemNode = undefined

    /*
    The node that is the left child of this node in the DynamicBoundingVolumeTree2D.
    */
    DynamicBoundingVolumeTreeNode2D leftChild = undefined
    /*
    The node that is the right child of this node in the DynamicBoundingVolumeTree2D.
    */
    DynamicBoundingVolumeTreeNode2D rightChild = undefined

    /*
    The height of this node in the DynamicBoundingVolumeTree2D.
    */
    integer height = -1
    /*
    This node's ID.
    */
    integer id = -1
    
    /*
    This action sets the id of the Dynamic Bounding Volume Tree Node (2D).
    This action is used internally. 

    Attribute: Parameter id The integer that will be the node id. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            node:Set(0)
    */
    action SetID(integer id)
        me:id = id
    end
    
    /*
    This action gets the id of this node.
    This action is used internally.

    Attribute: Returns The id of this node.

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.DynamicBoundingVolumeTree2D

            DynamicBoundingVolumeTree2D tree
            DynamicBoundingVolumeTreeNode2D newNode
            newNode:SetID(0)
            integer id = newNode:GetID()
    */
    action GetID returns integer
        return id
    end

    /*
    This action sets the Item2DNode of the Dynamic Bounding Volume Tree Node (2D), 
    which has among its data members a BoundingBox2D and an Item2D.
    This action is used internally. 

    Attribute: Parameter itemNode The item2DNode that this node will represent. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.Item2DNode

            DynamicBoundingVolumeTreeNode2D node
            Item2DNode itemNode
            node:SetItemNode(itemNode)
    */
    action SetItemNode(Item2DNode itemNode)
        me:itemNode = itemNode
    end

    /*
    This action returns the Item2DNode in the Dynamic Bounding Volume Tree Node (2D), 
    which has among its data members a BoundingBox2D and an Item2D.
    This action is used internally. 

    Attribute: Returns The item2DNode in this tree node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.Item2DNode

            DynamicBoundingVolumeTreeNode2D node
            Item2DNode itemNode
            itemNode = node:GetItemNode
    */
    action GetItemNode returns Item2DNode
        return itemNode
    end

    /*
    This action returns the integer height of this node in the 
    DynamicBoundingVolumeTree2D.
    This action is used internally. 

    Attribute: Returns The integer height of this tree node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        
            DynamicBoundingVolumeTreeNode2D node
            output "Node " + node:GetID() + " is at height " + node:GetHeight()
    */
    action GetHeight returns integer
        return height
    end

    /*
    This action sets the height of the Dynamic Bounding Volume Tree Node (2D) in 
    the DynamicBoundingVolumeTree2D.
    This action is used internally. 

    Attribute: Parameter height The integer height at which this node should be. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.Item2DNode

            DynamicBoundingVolumeTreeNode2D node
            Item2DNode itemNode
            node:SetHeight(1)
    */
    action SetHeight(integer height)
        me:height = height
    end
    
    /*
    This action returns the BoundingBox2D which this node represents. 
    This action is used internally. 

    Attribute: Returns The BoundingBox2D represented by this tree node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.BoundingBox2D

            DynamicBoundingVolumeTreeNode2D node
            BoundingBox2D boundingBox
            boundingBox = node:GetBoundingBox()
    */
    action GetBoundingBox returns BoundingBox2D
        return boundingBox
    end
    /*
    This action sets the BoundingBox2D which this node is to represent. 
    This action is used internally. 

    Attribute: Parameter boundingBox The BoundingBox2D to be represented by this tree node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D
        use Libraries.Game.Collision.BoundingBox2D

            DynamicBoundingVolumeTreeNode2D node
            BoundingBox2D boundingBox
            node:SetBoundingBox(boundingBox)
    */
    action SetBoundingBox(BoundingBox2D boundingBox)
        me:boundingBox = boundingBox
    end

    /*
    This action returns the DynamicBoundingVolumeTreeNode2D which is the parent 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode2D parent of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D parentNode
            parentNode:SetID(1)
            node:SetParent(parentNode)
            output "The parent of this node is node " + node:GetParent():GetID()
    */
    action GetParent returns DynamicBoundingVolumeTreeNode2D
        return treeParent
    end

    /*
    This action sets the DynamicBoundingVolumeTreeNode2D which is to be the parent 
    of this node. 
    This action is used internally. 

    Attribute: Parameter treeParent The DynamicBoundingVolumeTreeNode2D which is to be the parent of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D parentNode
            node:SetParent(parentNode)
    */
    action SetParent(DynamicBoundingVolumeTreeNode2D treeParent)
        me:treeParent = treeParent
    end

    /*
    This action returns the DynamicBoundingVolumeTreeNode2D which is the left child 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode2D left child of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D leftNode
            leftNode:SetID(1)
            node:SetLeftChild(leftNode)
            output "The left child of this node is node " + node:GetLeftChild():GetID()
    */
    action GetLeftChild returns DynamicBoundingVolumeTreeNode2D
        return leftChild
    end
    /*
    This action sets the DynamicBoundingVolumeTreeNode2D which is to be the left child 
    of this node. 
    This action is used internally. 

    Attribute: Parameter leftChild The DynamicBoundingVolumeTreeNode2D which is to be the left child of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D leftNode
            node:SetLeftChild(leftNode)
    */
    action SetLeftChild(DynamicBoundingVolumeTreeNode2D leftChild)
        me:leftChild = leftChild
    end
    /*
    This action returns the DynamicBoundingVolumeTreeNode2D which is the right child 
    of this node. 
    This action is used internally. 

    Attribute: Returns The DynamicBoundingVolumeTreeNode2D right child of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D rightNode
            rightNode:SetID(1)
            node:SetRightChild(rightNode)
            output "The right child of this node is node " + node:GetRightChild():GetID()
    */
    action GetRightChild returns DynamicBoundingVolumeTreeNode2D
        return rightChild
    end
    /*
    This action sets the DynamicBoundingVolumeTreeNode2D which is to be the right child 
    of this node. 
    This action is used internally. 

    Attribute: Parameter rightChild The DynamicBoundingVolumeTreeNode2D which is to be the right child of this node. 

    Attribute: Example

        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D rightNode
            node:SetRightChild(rightNode)
    */
    action SetRightChild(DynamicBoundingVolumeTreeNode2D rightChild)
        me:rightChild = rightChild
    end

    /*
    This action returns true if this node is a leaf (i.e. has no children) and false
    if this node has children. 

    Attribute Returns boolean The boolean that indicates whether or not this node is a leaf

    Attribute: Example
        use Libraries.Game.Collision.DynamicBoundingVolumeTreeNode2D

            DynamicBoundingVolumeTreeNode2D node
            DynamicBoundingVolumeTreeNode2D leftNode
            node:SetLeftChild(leftNode)
            if node:IsLeaf() 
                output "This node is a leaf."
            else
                output "This node is not a leaf."
            end

    */
    action IsLeaf returns boolean
        return leftChild = undefined
    end
end