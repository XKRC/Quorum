package Libraries.Game.Collision.Narrowphase

use Libraries.Containers.Array
use Libraries.Compute.Vector3
use Libraries.Game.Collision.Narrowphase.ConvexConvexVertex

/*
This class stores the faces given in terms of vertices of the face of a polyhedron.
*/
class ConvexConvexFace 
    Array<ConvexConvexVertex> vertices
    Array<ConvexConvexFace> faces
    Array<integer> edges
    Vector3 normal
    number distance = 0
    integer mark = 0
    ConvexConvexFace prev = undefined
    ConvexConvexFace next = undefined

    on create
        faces:SetSize(3)
        edges:SetSize(3)
        repeat 3 times
            ConvexConvexVertex w
            vertices:Add(w)
        end
    end

    /* 
    This action gets all of the vertices for a face.
    */
    action GetVertices returns Array<ConvexConvexVertex>
        return vertices
    end

    /*
    This action gets all of the faces that is a part of the polyhedron that contains the current ConvexConvexFace.
    */
    action GetFaces returns Array<ConvexConvexFace>
        return faces
    end

    /*
    This action returns all of the edges of the face.
    */
    action GetEdges returns Array<integer>
        return edges
    end

    /*
    This action returns a vector that is perpendicular to the face.
    */
    action GetNormal returns Vector3
        return normal
    end

    /*
    This action sets a vector that is perpendicular to the face.
    */
    action SetNormal(Vector3 normal)
        me:normal = normal
    end

    /*
    This action gets the distance from this face to the global origin.
    */
    action GetDistance returns number
        return distance
    end


    /*
    This action sets the distance from this face to the global origin.
    */
    action SetDistance(number distance)
        me:distance = distance
    end

    /*
    This action returns whether this face has been checked in the calculation of building a shape (polytope) that will allow us to calculate
    the distance between a convex shape and the origin.
    */
    action GetMark returns integer
        return mark
    end

    /*
    This action sets whether this face has been checked in the calculation of building a shape (polytope) that will allow us to calculate
    the distance between a convex shape and the origin.
    */
    action SetMark(integer mark)
        me:mark = mark
    end

    /*
    This action returns a ConvexConvexFace that is linked in front of the current ConvexConvexFace.
    */
    action GetPrevious returns ConvexConvexFace
        return prev
    end

    /*
    This action sets a ConvexConvexFace that is linked in front of the current ConvexConvexFace.
    */
    action SetPrevious(ConvexConvexFace face)
        me:prev = face
    end

    /*
    This action returns a ConvexConvexFace that is linked to the back of the current ConvexConvexFace.
    */
    action GetNext returns ConvexConvexFace
        return next
    end

    /*
    This action sets a ConvexConvexFace that is linked to the back of the current ConvexConvexFace.
    */
    action SetNext(ConvexConvexFace face)
        me:next = face
    end
end