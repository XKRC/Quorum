package Libraries.Game.Collision.Narrowphase

use Libraries.Compute.Vector2

/*
This class records the support points between shapes A and B.
This class is used internally by Simplex2D.
*/
class SimplexVertex2D 
    Vector2 supportA    //a vertex of shape A that is the support point for shape A in global coordinates
    Vector2 supportB    //a vertex of shape B that is the support point for shape B in global coordinates
    Vector2 support     //vector from supportA to supportB (supportB - supportA), which is the support point of the Minkowski difference of the two shapes
    number barycentricCoordinate = 0    //the barycentricCoordinates that should be multiplied to supportA || supportB || support 
    integer indexA = 0      //the index of supportA on shape A
    integer indexB = 0      //the index of supportB on shape B

    /*
    This action sets this SimplexVertex2D class with another SimplexVertex2D.
    */
    action Set(SimplexVertex2D vertex)
        supportA:Set(vertex:supportA)
        supportB:Set(vertex:supportB)
        support:Set(vertex:support)
        barycentricCoordinate = vertex:barycentricCoordinate
        indexA = vertex:indexA
        indexB = vertex:indexB
    end

    /*
    This action returns a support point on shape A in global coordinates.
    */
    action GetSupportA returns Vector2
        return supportA
    end

    /*
    This action sets a support point on shape A in global coordinates.
    */
    action SetSupportA(Vector2 support)
        me:supportA = support
    end

    /*
    This action gets a support point on shape B in global coordinates.
    */
    action GetSupportB returns Vector2
        return supportB
    end

    /*
    This action sets a support point on shape B in global coordinates.
    */
    action SetSupportB(Vector2 support)
        me:supportB = support
    end

    /*
    This action gets the support point on the Minkowski difference of the two shapes.
    */
    action GetSupport returns Vector2
        return support
    end

    /*
    This action sets the support point on the Minkowski difference of the two shapes.
    */
    action SetSupport(Vector2 support)
        me:support = support
    end

    /*
    This action gets the barycentric coordinate that is multiplied to the support
    points stored in the current SimplexVertex2D class.
    */
    action GetBarycentricCoordinate returns number
        return barycentricCoordinate
    end

    /*
    This action sets the barycentric coordinate that is multiplied to the support
    points stored in the current SimplexVertex2D class.
    */
    action SetBarycentricCoordinate(number coordinate)
        me:barycentricCoordinate = coordinate
    end

    /*
    This action returns the index of supportA on shape A.
    */
    action GetIndexA returns integer
        return indexA
    end

    /*
    This action sets the index of supportA on shape A.
    */
    action SetIndexA(integer index)
        me:indexA = index
    end

    /*
    This action returns the index of supportB on shape B.
    */
    action GetIndexB returns integer
        return indexB
    end

    /*
    This action sets the index of supportB on shape B.
    */
    action SetIndexB(integer index)
        me:indexB = index
    end
end