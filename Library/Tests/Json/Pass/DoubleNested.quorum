use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Iterator
use Libraries.Containers.HashTable

class Main
    action Main
        JavaScriptObjectNotation data
        data:SetKey("detail")
        data:SetArray()
        data:Add("a")
        data:Add(true)
        data:Add(1)
        data:Add(2.0)
        JavaScriptObjectNotation object
        object:SetKey("nestedObject")
        object:Add("a", 1)
        object:Add("b", 2)
        object:Add("c", 3)
        JavaScriptObjectNotation object2
        object2:SetKey("doubleNested")
        object2:Add("d", 6)
        object2:Add("e", 7)
        object2:Add("f", 8)
        object:Add(object2)

        JavaScriptObjectNotation json
        json:Add("data1", "A")
        json:Add("data2", "B")
        json:Add(data)
        json:Add(object)
        CheckResult(json:ToText())
    end

    action CheckResult(text result)
        text dq = ""
        dq = dq:GetDoubleQuote()
        text answer = "{"+dq+"data1"+dq+": "+dq+"A"+dq+", "+dq+"data2"+dq+": "+dq+"B"+dq+", "+dq+"detail"+dq+": ["+dq+"a"+dq+", true, 1, 2.0], "+dq+"nestedObject"+dq+": {"+dq+"a"+dq+": 1, "+dq+"b"+dq+": 2, "+dq+"c"+dq+": 3, "+dq+"doubleNested"+dq+": {"+dq+"d"+dq+": 6, "+dq+"e"+dq+": 7, "+dq+"f"+dq+": 8}}}"
        if answer = result
            output "pass"
        else
            output "fail"
        end
    end
end