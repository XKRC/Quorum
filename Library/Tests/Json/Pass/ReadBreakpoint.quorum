use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Iterator
use Libraries.Containers.HashTable

class Main 
    action Main
        HashTable<integer, text> projects
        projects:Add(1, "project1")
        projects:Add(2, "project2")
        JavaScriptObjectNotation array
        array:SetKey("detail")
        array:SetArray()
        Iterator<text> iterator = projects:GetValueIterator()
        repeat while iterator:HasNext()
            array:Add(iterator:Next())
        end
        JavaScriptObjectNotation item1
        item1:SetKey("Breakpoint")
        item1:Add("main.quorum", 15)
        JavaScriptObjectNotation item2
        item2:SetKey("Breakpoint")
        item2:Add("main.quorum", 24)
        JavaScriptObjectNotation breakpoints
        breakpoints:SetKey("Breakpoints")
        breakpoints:SetArray()
        breakpoints:Add(item1)
        breakpoints:Add(item2)
        JavaScriptObjectNotation json
        json:Add("data1", 10)
        json:Add("data2", 11)
        json:Add(array)
        json:SetKey("MyData")
        json:Add(breakpoints)
        json:SetPrettyPrint(false)
        JavaScriptObjectNotation jsonRead
        jsonRead:Read(json:ToText())
        CheckResult(jsonRead:ToText())
    end

    action CheckResult(text result)
        text dq = ""
        dq = dq:GetDoubleQuote()
        text answer = "{"+dq+"MyData"+dq+": {"+dq+"data1"+dq+": 10, "+dq+"data2"+dq+": 11, "+dq+"detail"+dq+": ["+dq+"project1"+dq+", "+dq+"project2"+dq+"], "+dq+"Breakpoints"+dq+": [{"+dq+"Breakpoint"+dq+": {"+dq+"main.quorum"+dq+": 15}}, {"+dq+"Breakpoint"+dq+": {"+dq+"main.quorum"+dq+": 24}}]}}"
        if answer = result
            output "pass"
        else
            output "fail"
        end
    end
end